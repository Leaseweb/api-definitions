{
  "get": {
    "summary": "CreateListener",
    "operationId": "CreateListener",
    "description": "Create a listener for a load balancer.\n\nThe Load Balancer ID is required.\n\nThe default-actions parameter is required.\n\nThe protocol and port are optional. If not specified, a listener with \"HTTP\" and port \"80\" will be created by default.\n\n#### AWS CLI example\n\n```sh\naws elbv2 create-listener --load-balancer-arn <LOAD_BALANCER_ID> --protocol <PROTOCOL> --port <PORT> --default-actions --endpoint-url <LEASEWEB_AWS_EC2_SERVER_URL>\n```\n",
    "tags": [],
    "security": [
      {
        "Authorization": []
      }
    ],
    "parameters": [
      {
        "description": "The ID of the load balancer.",
        "example": "29145c92-4a68-4c63-aaeb-f2212d85a74a",
        "in": "query",
        "name": "LoadBalancerArn",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      {
        "description": "Protocol of the listener.",
        "example": "HTTP",
        "in": "query",
        "name": "Protocol",
        "schema": {
          "type": "string",
          "enum": [
            "HTTPS",
            "HTTP",
            "TCP"
          ]
        }
      },
      {
        "description": "Port of the listener.",
        "example": "80",
        "in": "query",
        "name": "Port",
        "schema": {
          "type": "integer"
        }
      }
    ],
    "responses": {
      "200": {
        "content": {
          "application/xml": {
            "schema": {
              "$ref": "../components/schemas/createListenerResult.json"
            },
            "example": " <?xml version='1.0' encoding='UTF-8'?>\n <CreateListenerResponse xmlns='http://elasticloadbalancing.amazonaws.com/doc/2015-12-01/'>\n \t<CreateListenerResult>\n \t\t<Listeners>\n \t\t\t<member>\n \t\t\t\t<LoadBalancerArn>1ac942f4-cdd9-4c00-973f-ed82a92940cb</LoadBalancerArn>\n \t\t\t\t<Protocol>HTTP</Protocol>\n \t\t\t\t<Port>80</Port>,\n \t\t\t\t<ListenerArn>2ac942f4-cdd9-4c00-973f-ed82a92940cb</ListenerArn>\n \t\t\t</member>\n \t\t</Listeners>\n \t</CreateListenerResult>\n \t<ResponseMetadata>\n \t\t<RequestId>8008e3fb-f671-46ab-ade4-871ca5508845</RequestId>\n \t</ResponseMetadata>\n </CreateListenerResponse>\n "
          }
        }
      },
      "400": {
        "$ref": "../components/responses/400.json"
      },
      "401": {
        "$ref": "../components/responses/401.json"
      },
      "403": {
        "$ref": "../components/responses/403.json"
      },
      "404": {
        "$ref": "../components/responses/404.json"
      },
      "500": {
        "$ref": "../components/responses/500.json"
      },
      "503": {
        "$ref": "../components/responses/503.json"
      }
    },
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/?Action=CreateListener/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/?Action=CreateListener/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/?Action=CreateListener/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/?Action=CreateListener/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/?Action=CreateListener/getundefined"
        }
      }
    ]
  }
}
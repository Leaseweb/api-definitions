{
  "get": {
    "description": "This endpoint returns all your Services.\n",
    "operationId": "services-list-get",
    "responses": {
      "200": {
        "content": {
          "application/json": {
            "example": {
              "metadata": {
                "limit": 2,
                "offset": 0,
                "totalCount": 10
              },
              "services": [
                {
                  "billingCycle": "1 MONTH",
                  "cancellable": false,
                  "contractId": "00000110",
                  "contractTerm": "1 YEAR",
                  "contractTermEndDate": "2020-01-31T00:00:00+00:00",
                  "currency": "EUR",
                  "deliveryDate": "2019-01-01T00:00:00+00:00",
                  "deliveryEstimate": "5 - 7 business days",
                  "endDate": "2020-01-31T00:00:00+00:00",
                  "equipmentId": "12345678",
                  "id": "10000000000010",
                  "orderDate": "2019-01-01T00:00:00+00:00",
                  "pricePerFrequency": 396.01,
                  "productId": "DEDICATED_SERVER",
                  "reference": "this is a reference",
                  "startDate": "2019-01-01T00:00:00+00:00",
                  "status": "ACTIVE",
                  "uncancellable": true
                },
                {
                  "attributes": {
                    "domainName": "test.com"
                  },
                  "billingCycle": "1 YEAR",
                  "cancellable": true,
                  "contractId": "00000110",
                  "contractTerm": "1 YEAR",
                  "contractTermEndDate": "2020-01-31T00:00:00+00:00",
                  "currency": "EUR",
                  "deliveryDate": "2019-01-01T00:00:00+00:00",
                  "deliveryEstimate": "5 - 7 business days",
                  "id": "10000000000011",
                  "orderDate": "2019-01-01T00:00:00+00:00",
                  "pricePerFrequency": 139.99,
                  "productId": "DOMAIN",
                  "startDate": "2019-01-01T00:00:00+00:00",
                  "status": "ACTIVE",
                  "uncancellable": false
                }
              ]
            },
            "schema": {
              "properties": {
                "_metadata": {
                  "properties": {
                    "limit": {
                      "default": 10,
                      "description": "The offset used to generate this response",
                      "example": 10,
                      "title": "The limit used to generate this response.",
                      "type": "integer"
                    },
                    "offset": {
                      "default": 0,
                      "description": "The limit used to generate this response",
                      "title": "The offset used to generate this response.",
                      "type": "integer"
                    },
                    "totalCount": {
                      "description": "Total amount of services in this collection",
                      "example": 27,
                      "title": "Total amount of invoices in this collection.",
                      "type": "integer"
                    }
                  },
                  "title": "Metadata about the collection.",
                  "type": "object"
                },
                "services": {
                  "description": "An array of services",
                  "items": {
                    "properties": {
                      "attributes": {
                        "description": "an object product specific attributes",
                        "properties": {
                          "domainName": {
                            "description": "Name of the domain",
                            "example": "test.com",
                            "title": "domain name",
                            "type": "string"
                          }
                        },
                        "title": "an object product specific attributes",
                        "type": "object"
                      },
                      "billingCycle": {
                        "description": "The frequency of the billing",
                        "example": "1 MONTH",
                        "type": "string"
                      },
                      "cancellable": {
                        "description": "Indicates if the service can be cancelled",
                        "title": "Indicates if the service can be cancelled",
                        "type": "boolean"
                      },
                      "contractId": {
                        "description": "The Unique id of the contract",
                        "example": "00000110",
                        "title": "The Unique id of the contract",
                        "type": "string"
                      },
                      "contractTerm": {
                        "description": "The term of the contract",
                        "example": "1 YEAR",
                        "type": "string"
                      },
                      "contractTermEndDate": {
                        "description": "End date of the current contract term",
                        "example": "2019-05-01T00:00:00+00:00",
                        "title": "End date of the current contract term",
                        "type": "string"
                      },
                      "currency": {
                        "description": "The currency of the service price",
                        "example": "EUR",
                        "type": "string"
                      },
                      "deliveryDate": {
                        "description": "Delivery date of the service",
                        "example": "2019-05-01T00:00:00+00:00",
                        "type": "string"
                      },
                      "deliveryEstimate": {
                        "description": "Estimated delivery of the service",
                        "example": "5 - 7 business days",
                        "type": "string"
                      },
                      "endDate": {
                        "description": "The date the service is ended",
                        "example": "2019-05-01T00:00:00+00:00",
                        "title": "The date the service is ended",
                        "type": "string"
                      },
                      "equipmentId": {
                        "description": "The id of the equipment",
                        "example": "12345678",
                        "title": "The id of the equipment",
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique id of the service",
                        "example": "10000000000010",
                        "title": "The unique id of the service",
                        "type": "string"
                      },
                      "orderDate": {
                        "description": "The date of order",
                        "example": "2019-05-01T00:00:00+00:00",
                        "type": "string"
                      },
                      "pricePerFrequency": {
                        "description": "The price per frequency",
                        "example": 18.01,
                        "format": "float",
                        "type": "number"
                      },
                      "productId": {
                        "description": "The identifier of a product",
                        "example": "DEDICATED_SERVER",
                        "title": "The identifier of a product",
                        "type": "string"
                      },
                      "reference": {
                        "description": "The reference a customer gave to the service",
                        "example": "This is my reference",
                        "title": "The reference a customer gave to the service",
                        "type": "string"
                      },
                      "startDate": {
                        "description": "The date the service started",
                        "example": "2019-05-01T00:00:00+00:00",
                        "title": "The date the service started",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of the service",
                        "enum": [
                          "NEW_CONTRACT",
                          "ACTIVE",
                          "SCHEDULED",
                          "TO_BE_MODIFIED",
                          "TO_BE_PROVISIONED",
                          "TO_BE_SUSPENDED",
                          "SUSPENDED",
                          "TO_BE_RECONNECTED"
                        ],
                        "title": "Status of the service",
                        "type": "string"
                      },
                      "uncancellable": {
                        "description": "Indicates if the service can be uncancelled",
                        "title": "Indicates if the service can be uncancelled",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "title": "An array of services.",
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Ok."
      },
      "401": {
        "description": "Not Authorized.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "401",
              "errorMessage": "You are not authorized to view this resource."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "403",
              "errorMessage": "Access to the requested resource is forbidden."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "500",
              "errorMessage": "'The API could not handle your request at this time."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "503",
              "errorMessage": "The API is not available at the moment."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      }
    },
    "summary": "Get all your Services",
    "tags": [
      "Services"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/services/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/services/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/services/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/services/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/services/getundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "description": "Limit the number of results returned",
      "in": "query",
      "name": "limit",
      "schema": {
        "default": 10,
        "type": "integer"
      }
    },
    {
      "description": "Return results starting from the given offset",
      "in": "query",
      "name": "offset",
      "schema": {
        "default": 0,
        "type": "integer"
      }
    },
    {
      "description": "Filter the services endpoint with a productId",
      "in": "query",
      "name": "productId",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Filter the services endpoint with a reference",
      "in": "query",
      "name": "reference",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Filter the services endpoint with an equipmentId",
      "in": "query",
      "name": "equipmentId",
      "schema": {
        "type": "string"
      }
    }
  ]
}
{
  "get": {
    "operationId": "get/ranges",
    "summary": "List ranges",
    "description": "A Floating IP range is bound to a particular site or metro.\n\nIf you have services in multiple data centers and want to use the Floating IP feature in each of those locations you will need to order a range per site or metro.",
    "parameters": [
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "default": 10,
          "type": "integer"
        },
        "description": "Limit the number of results returned"
      },
      {
        "name": "offset",
        "in": "query",
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "description": "Return results starting from the given offset"
      },
      {
        "schema": {
          "type": "string",
          "enum": [
            "SITE",
            "METRO"
          ]
        },
        "in": "query",
        "name": "type",
        "description": "Filter ranges by range type"
      },
      {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "location",
        "description": "Filter ranges by range location"
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-04/schema",
              "id": "http://jsonschema.net",
              "properties": {
                "ranges": {
                  "type": "array",
                  "description": "Collection of Floating IP Ranges",
                  "items": {
                    "type": "object",
                    "description": "Single Floating IP Range",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the range"
                      },
                      "range": {
                        "type": "string",
                        "description": "CIDR representation of the range"
                      },
                      "customerId": {
                        "type": "string",
                        "description": "ID of the customer associated with this range"
                      },
                      "salesOrgId": {
                        "type": "string",
                        "description": "Sales Org ID of the customer associated with this range"
                      },
                      "location": {
                        "type": "string",
                        "description": "Location of the range"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the range",
                        "enum": [
                          "SITE",
                          "METRO"
                        ]
                      }
                    }
                  }
                },
                "_metadata": {
                  "type": "object",
                  "description": "Metadata about the collection",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "description": "The maximum number of results returned",
                      "default": 20
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Results are returned started at the given offset",
                      "default": 0
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "The total number of results"
                    }
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "ranges": [
                    {
                      "id": "88.17.0.0_17",
                      "range": "88.17.0.0/17",
                      "customerId": "10001234",
                      "salesOrgId": "2000",
                      "location": "AMS-01",
                      "type": "SITE"
                    },
                    {
                      "id": "85.17.0.0_17",
                      "range": "85.17.0.0/17",
                      "customerId": "10001234",
                      "salesOrgId": "2000",
                      "location": "AMS-01",
                      "type": "SITE"
                    },
                    {
                      "id": "86.17.0.0_17",
                      "range": "86.17.0.0/17",
                      "customerId": "10001234",
                      "salesOrgId": "2000",
                      "location": "AMS",
                      "type": "METRO"
                    }
                  ],
                  "_metadata": {
                    "limit": 20,
                    "offset": 0,
                    "totalCount": 3
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "500",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "503",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "Floating IP ranges"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/ranges/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/ranges/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/ranges/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/ranges/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/ranges/getundefined"
        }
      }
    ]
  }
}
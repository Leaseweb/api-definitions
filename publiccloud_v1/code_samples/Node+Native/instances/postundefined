const http = require("https");

const options = {
  "method": "POST",
  "hostname": "api.leaseweb.com",
  "port": null,
  "path": "/publicCloud/v1/instances",
  "headers": {
    "content-type": "application/json",
    "X-LSW-Auth": "REPLACE_KEY_VALUE"
  }
};

const req = http.request(options, function (res) {
  const chunks = [];

  res.on("data", function (chunk) {
    chunks.push(chunk);
  });

  res.on("end", function () {
    const body = Buffer.concat(chunks);
    console.log(body.toString());
  });
});

req.write(JSON.stringify({
  region: 'eu-west-3',
  type: 'lsw.m3.large',
  imageId: 'UBUNTU_22_04_64BIT',
  marketAppId: 'CPANEL',
  reference: 'string',
  contractType: 'HOURLY',
  contractTerm: 0,
  billingFrequency: 1,
  rootDiskSize: 5,
  rootDiskStorageType: 'LOCAL',
  sshKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCyXsJHPbU4eQaXJMwxkZrk51w/3km1xJYLGjza45Nf1whpyg4j15kjOk3UVTNi/OatPgx/Re16XPxwA1d0RS2uwtmehYjN3lvmNfJJcvvz+CGZe8HQG1FzE1nNy3arSGdHhjvJlXg1ooS7TNBgo8FO37Awv6YDd2JO1TinAS/wkw==',
  userData: '#cloud-config\n# vim: syntax=yaml\n#\n# This is the configuration syntax that the write_files module\n# will know how to understand. Encoding can be given b64 or gzip or (gz+b64).\n# The content will be decoded accordingly and then written to the path that is\n# provided. \n#\n# Note: Content strings here are truncated for example purposes.\nwrite_files:\n- encoding: b64\n  content: TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3Rll1cyBtYXhpbXVzLg==\n  owner: root:root\n  path: /tmp/3.txt\n  permissions: \'0644\'\n'
}));
req.end();
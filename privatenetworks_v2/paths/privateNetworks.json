{
  "get": {
    "operationId": "get/privateNetworks",
    "tags": [
      "Private networks"
    ],
    "summary": "List private networks",
    "description": "",
    "parameters": [
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "default": 10,
          "type": "integer"
        },
        "description": "Limit the number of results returned"
      },
      {
        "name": "offset",
        "in": "query",
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "description": "Return results starting from the given offset"
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-04/schema",
              "id": "http://jsonschema.net",
              "properties": {
                "_metadata": {
                  "type": "object",
                  "description": "Metadata about the collection",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "description": "The maximum number of results returned",
                      "default": 20
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Results are returned started at the given offset",
                      "default": 0
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "The total amount of results"
                    }
                  }
                },
                "privateNetworks": {
                  "type": "array",
                  "description": "An array of private networks",
                  "items": {
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema",
                    "id": "http://jsonschema.net",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier of the private network"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the private network"
                      },
                      "equipmentCount": {
                        "type": "integer",
                        "description": "Number of equipments in this private network"
                      },
                      "serverCount": {
                        "type": "integer",
                        "deprecated": true,
                        "description": "Number of equipments in this private network (please use equipmentCount instead)."
                      },
                      "createdAt": {
                        "type": "date",
                        "description": "Date timestamp when the resource was created"
                      },
                      "updatedAt": {
                        "type": "date",
                        "description": "Date timestamp when the resource was last updated"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "_metadata": {
                    "totalCount": 1,
                    "limit": 10,
                    "offset": 0
                  },
                  "privateNetworks": [
                    {
                      "equipmentCount": 4,
                      "id": "811",
                      "name": "default",
                      "createdAt": "2015-07-16T13:06:45+0200",
                      "updatedAt": "2015-07-16T13:06:45+0200"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "500",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "503",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateNetworks/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateNetworks/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateNetworks/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateNetworks/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateNetworks/getundefined"
        }
      }
    ]
  },
  "post": {
    "operationId": "post/privateNetworks",
    "tags": [
      "Private networks"
    ],
    "summary": "Create a private network",
    "description": "Currently only one Private Network is allowed per customer.\n\nOptionally you can give your Private Network a name by supplying the `name`\nparameter in the request.\n\nOnce a Private Network is created you can add dedicated servers to this private network.",
    "requestBody": {
      "content": {
        "application/json": {
          "examples": {
            "example": {
              "value": {
                "name": "production"
              }
            }
          },
          "schema": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-04/schema",
            "id": "http://jsonschema.net",
            "properties": {
              "name": {
                "type": "string",
                "description": "A name to describe this private network",
                "examples": [
                  "production"
                ]
              }
            }
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-04/schema",
              "id": "http://jsonschema.net",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the private network"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the private network"
                },
                "createdAt": {
                  "type": "date",
                  "description": "Date timestamp when the resource was created"
                },
                "updatedAt": {
                  "type": "date",
                  "description": "Date timestamp when the resource was last updated"
                },
                "equipmentCount": {
                  "type": "integer",
                  "description": "Number of equipments in this private network"
                },
                "servers": {
                  "type": "array",
                  "description": "Array of servers connected to this private network.",
                  "deprecated": true,
                  "items": {
                    "type": "object"
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "id": "12345",
                  "name": "default",
                  "createdAt": "2015-01-21T14:34:12+0000",
                  "updatedAt": "2015-01-21T14:34:12+0000",
                  "equipmentCount": 0,
                  "servers": []
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "500",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "503",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateNetworks/postundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateNetworks/postundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateNetworks/postundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateNetworks/postundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateNetworks/postundefined"
        }
      }
    ]
  }
}
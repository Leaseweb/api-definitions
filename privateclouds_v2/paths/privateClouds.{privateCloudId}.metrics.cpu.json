{
  "get": {
    "operationId": "get/privateClouds/{id}/metrics/cpu",
    "summary": "Inspect CPU metrics",
    "description": "",
    "parameters": [
      {
        "name": "granularity",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "NONE",
            "5MIN",
            "HOUR",
            "DAY",
            "MONTH",
            "YEAR"
          ]
        },
        "description": "Specify the preferred interval for each metric. If granularity is omitted from the request, only one metric is returned."
      },
      {
        "name": "aggregation",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "AVG"
          ]
        },
        "description": "Aggregate each metric using the given aggregation function."
      },
      {
        "name": "from",
        "in": "query",
        "schema": {
          "type": "date"
        },
        "description": "Start of date interval in RFC3339 format.\n\nThe returned data will include everything up from - and including - the specified date time.\n"
      },
      {
        "name": "to",
        "in": "query",
        "schema": {
          "type": "date"
        },
        "description": "End of date interval in RFC3339 format.\n\nThe returned data will include everything up until - but not including - the specified date time.\n"
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "_metadata": {
                    "from": "2017-07-01T00:00:00+00:00",
                    "to": "2017-07-02T00:00:00+00:00",
                    "granularity": "MONTH",
                    "aggregation": "MAX"
                  },
                  "metrics": {
                    "CPU": {
                      "unit": "CORES",
                      "values": [
                        {
                          "timestamp": "2017-07-01T00:00:00+00:00",
                          "value": 24
                        },
                        {
                          "timestamp": "2017-07-02T00:00:00+00:00",
                          "value": 24
                        }
                      ]
                    }
                  }
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "_metadata": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "Start date (inclusive) in format RFC3339"
                    },
                    "to": {
                      "type": "string",
                      "description": "End timestamp (exclusive) in format RFC3339"
                    },
                    "granularity": {
                      "type": "string",
                      "description": "Granularity of the request",
                      "enum": [
                        "NONE",
                        "5MIN",
                        "HOUR",
                        "DAY",
                        "MONTH",
                        "YEAR"
                      ]
                    },
                    "aggregation": {
                      "type": "string",
                      "description": "Aggregation method of the returned values",
                      "enum": [
                        "AVG"
                      ]
                    }
                  }
                },
                "metrics": {
                  "type": "object",
                  "properties": {
                    "CPU": {
                      "type": "object",
                      "description": "CPU metrics",
                      "properties": {
                        "unit": {
                          "type": "string",
                          "description": "Unit in which the metric is measured"
                        },
                        "values": {
                          "type": "array",
                          "description": "Array of value objects that contains the metric measurements",
                          "items": {
                            "type": "object",
                            "properties": {
                              "timestamp": {
                                "type": "string",
                                "description": "Date/time where the metric was measured."
                              },
                              "value": {
                                "type": "number",
                                "description": "Metric value"
                              }
                            },
                            "required": [
                              "timestamp",
                              "value"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": 404,
                  "errorMessage": "Resource '218030' was not found",
                  "reference": "https://www.leaseweb.com/contact",
                  "userMessage": "Resource with id '218030' not found."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "number"
                },
                "errorMessage": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                },
                "userMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "Private clouds"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateClouds.{privateCloudId}.metrics.cpu/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateClouds.{privateCloudId}.metrics.cpu/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateClouds.{privateCloudId}.metrics.cpu/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateClouds.{privateCloudId}.metrics.cpu/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateClouds.{privateCloudId}.metrics.cpu/getundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string"
      },
      "name": "privateCloudId",
      "in": "path",
      "required": true
    }
  ]
}
{
  "get": {
    "operationId": "get/privateClouds/{id}/credentials/{credentialType}/{username}",
    "summary": "Inspect user credentials",
    "description": "> Please note that this feature is only available for CloudStack Private Clouds.\n\nAlso note that you will only be able to retrieve the last password that we configured in your server or control panel. If you changed it, the information retrieved by this API call will not work.\n",
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "type": "REMOTE_MANAGEMENT",
                  "username": "root",
                  "password": "password123",
                  "domain": "123456"
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "description": "Name of the user in the remote management tool"
                },
                "password": {
                  "type": "string",
                  "description": "Password associated to the username"
                },
                "domain": {
                  "type": "string",
                  "description": "Domain name to log in to the remote management tool"
                },
                "type": {
                  "type": "string",
                  "description": "Type of credential pair",
                  "enum": [
                    "REMOTE_MANAGEMENT"
                  ]
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": 404,
                  "errorMessage": "Resource '218030' was not found",
                  "reference": "https://www.leaseweb.com/contact",
                  "userMessage": "Resource with id '218030' not found."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "number"
                },
                "errorMessage": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                },
                "userMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "Private clouds"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateClouds.{privateCloudId}.credentials.{credentialType}.{username}/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateClouds.{privateCloudId}.credentials.{credentialType}.{username}/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateClouds.{privateCloudId}.credentials.{credentialType}.{username}/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateClouds.{privateCloudId}.credentials.{credentialType}.{username}/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateClouds.{privateCloudId}.credentials.{credentialType}.{username}/getundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string",
        "enum": [
          "REMOTE_MANAGEMENT"
        ]
      },
      "name": "credentialType",
      "in": "path",
      "required": true,
      "description": "Type of credential pair"
    },
    {
      "schema": {
        "type": "string"
      },
      "name": "username",
      "in": "path",
      "required": true,
      "description": "Name of the user in the remote management tool"
    },
    {
      "schema": {
        "type": "string"
      },
      "name": "privateCloudId",
      "in": "path",
      "required": true,
      "description": "Id of the private cloud",
      "example": "123242"
    }
  ]
}
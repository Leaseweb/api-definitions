{
  "get": {
    "operationId": "get/privateClouds/{id}/credentials/{credentialType}",
    "summary": "List credentials",
    "description": ">Please note that this feature is only available for CloudStack Private Clouds.\n\nAlso note that you will only be able to retrieve the last password that we configured in your remote management tool. If you changed it, the information retrieved by this API call will not work.\n\n\n\n\n\n| Name      | Type   | Description                         |\n|-----------|--------|-------------------------------------|\n| type      | string | Type of credential pair. Possible values are `REMOTE_MANAGEMENT`. |\n| username  | string | Name of the user in the remote management tool. |\n| domain    | string | Domain name to log in to the remote management tool. |\n\n    Please note that the password is not returned in this call, you must use the endpoint to get a credential by the username to retrieve it.\n\nThe `_metadata` object contains the following attributes:\n\n| Name        | Type    | Description |\n|-------------|---------|-------------|\n| totalCount  | integer | Total amount of credentials that were found. |\n| limit       | integer | Maximum amount of credentials that will be included in the `credentials` array. |\n| offset      | integer | Offset of the request. |\n",
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "credentials": [
                    {
                      "type": "REMOTE_MANAGEMENT",
                      "username": "root",
                      "domain": "123456"
                    }
                  ],
                  "_metadata": {
                    "totalCount": 1,
                    "offset": 0,
                    "limit": 10
                  }
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "credentials": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of credential pair",
                        "enum": [
                          "REMOTE_MANAGEMENT"
                        ]
                      },
                      "username": {
                        "type": "string",
                        "description": "Name of the user in the remote management tool"
                      },
                      "domain": {
                        "type": "string",
                        "description": "Domain name to log in to the remote management tool"
                      }
                    }
                  }
                },
                "_metadata": {
                  "type": "object",
                  "properties": {
                    "totalCount": {
                      "type": "number",
                      "description": "Total amount of credentials that were found"
                    },
                    "offset": {
                      "type": "number",
                      "description": "Maximum amount of credentials that will be included in the credentials array"
                    },
                    "limit": {
                      "type": "number",
                      "description": "Offset of the request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": 404,
                  "errorMessage": "Resource '218030' was not found",
                  "reference": "https://www.leaseweb.com/contact",
                  "userMessage": "Resource with id '218030' not found."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "number"
                },
                "errorMessage": {
                  "type": "string"
                },
                "reference": {
                  "type": "string"
                },
                "userMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            },
            "schema": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "parameters": [
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "default": 10,
          "type": "integer"
        },
        "description": "Limit the number of results returned",
        "example": 10
      },
      {
        "name": "offset",
        "in": "query",
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "description": "Return results starting from the given offset",
        "example": 0
      }
    ],
    "tags": [
      "Private clouds"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateClouds.{privateCloudId}.credentials.{credentialType}/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateClouds.{privateCloudId}.credentials.{credentialType}/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateClouds.{privateCloudId}.credentials.{credentialType}/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateClouds.{privateCloudId}.credentials.{credentialType}/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateClouds.{privateCloudId}.credentials.{credentialType}/getundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string",
        "enum": [
          "REMOTE_MANAGEMENT"
        ]
      },
      "name": "credentialType",
      "in": "path",
      "required": true,
      "description": "Type of credential pair"
    },
    {
      "schema": {
        "type": "string"
      },
      "name": "privateCloudId",
      "in": "path",
      "required": true,
      "description": "Id of the private cloud",
      "example": "123242"
    }
  ]
}
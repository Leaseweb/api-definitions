{
  "post": {
    "description": "Grow the size of a volume in StorageVM.",
    "operationId": "Grow volume",
    "parameters": [
      {
        "schema": {
          "type": "string"
        },
        "name": "storageVMId",
        "in": "path",
        "required": true,
        "description": "UUID of the Storage VM.",
        "example": "1575dd1c-dddf-11ed-af62-000c299d72cd"
      },
      {
        "schema": {
          "type": "string"
        },
        "name": "volumeId",
        "in": "path",
        "required": true,
        "description": "UUID of a storage volume.",
        "example": "1575dd1c-dddf-11ed-af62-000c299d72cd"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "example": {
            "growSize": 5
          },
          "schema": {
            "properties": {
              "growSize": {
                "description": "The amount by which the volume will be grown in GB.",
                "type": "integer"
              }
            },
            "required": [
              "growSize"
            ],
            "type": "object"
          }
        }
      }
    },
    "responses": {
      "202": {
        "description": "Accepted",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id of the job",
                  "minLength": 1
                },
                "status": {
                  "type": "string",
                  "description": "The status of the job",
                  "enum": [
                    "PENDING",
                    "ACTIVE",
                    "SUSPENDED",
                    "COMPLETED",
                    "FAILED"
                  ],
                  "minLength": 1
                },
                "startedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time of the job (present if job is started)"
                },
                "completedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time of the job (present if job is completed or failed)"
                }
              }
            },
            "example": {
              "id": "d385ae54-3763-11ee-af62-000c299d72cd",
              "status": "PENDING"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "400",
              "errorDetails": {},
              "errorMessage": "Validation Failed."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "403",
              "errorMessage": "The access token is expired or invalid."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "404",
              "errorMessage": "Resource not found"
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "500",
              "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "503",
              "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      }
    },
    "tags": [],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/storageVMs.{storageVMId}.volumes.{volumeId}.grow/postundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/storageVMs.{storageVMId}.volumes.{volumeId}.grow/postundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/storageVMs.{storageVMId}.volumes.{volumeId}.grow/postundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/storageVMs.{storageVMId}.volumes.{volumeId}.grow/postundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/storageVMs.{storageVMId}.volumes.{volumeId}.grow/postundefined"
        }
      }
    ]
  }
}
{
  "get": {
    "description": "Show all storages for the given customer.",
    "operationId": "List storages",
    "parameters": [
      {
        "schema": {
          "default": 10,
          "type": "integer"
        },
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Limit the number of results returned."
      },
      {
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "name": "offset",
        "in": "query",
        "required": false,
        "description": "Return results starting from the given offset."
      }
    ],
    "responses": {
      "200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "_metadata": {
                  "description": "Metadata about the collection",
                  "properties": {
                    "limit": {
                      "default": 10,
                      "description": "The maximum number of results returned",
                      "type": "integer"
                    },
                    "offset": {
                      "default": 0,
                      "description": "Results are returned started at the given offset",
                      "type": "integer"
                    },
                    "totalCount": {
                      "description": "The total amount of results",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "storages": {
                  "description": "A list of storages for a customer",
                  "type": "array",
                  "items": {
                    "description": "A storage service",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the storage service",
                        "minLength": 1
                      },
                      "quantity": {
                        "type": "object",
                        "description": "The amount of GB assigned to this storage",
                        "properties": {
                          "value": {
                            "type": "number",
                            "description": "Size value",
                            "minimum": 0
                          },
                          "unit": {
                            "type": "string",
                            "description": "Size unit",
                            "minLength": 1
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "description": "Storage type",
                        "minLength": 1
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "example": {
              "_metadata": {
                "limit": 10,
                "offset": 0,
                "totalCount": 3
              },
              "storages": [
                {
                  "id": "10812374",
                  "quantity": {
                    "value": 70000,
                    "unit": "GB"
                  },
                  "type": "SANS"
                },
                {
                  "id": "10812375",
                  "quantity": {
                    "value": 350000,
                    "unit": "GB"
                  },
                  "type": "SANS"
                },
                {
                  "id": "10938904",
                  "quantity": {
                    "value": 65000,
                    "unit": "GB"
                  },
                  "type": "SANS"
                }
              ]
            }
          }
        }
      },
      "403": {
        "description": "Forbidden.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "403",
              "errorMessage": "The access token is expired or invalid."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "500",
              "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "Service Unavailable.",
        "content": {
          "application/json": {
            "example": {
              "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
              "errorCode": "503",
              "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
            },
            "schema": {
              "type": "object",
              "properties": {
                "correlationId": {
                  "type": "string",
                  "description": "The correlation ID of the current request."
                },
                "errorCode": {
                  "type": "string",
                  "description": "The error code."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "A human friendly description of the error."
                }
              }
            }
          }
        }
      }
    },
    "tags": [],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/storages/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/storages/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/storages/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/storages/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/storages/getundefined"
        }
      }
    ]
  }
}
{
  "get": {
    "operationId": "get/privateRacks/{privateRackId}/ips",
    "summary": "List IPs",
    "description": "",
    "parameters": [
      {
        "name": "networkType",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Filter the collection of ip addresses by network type"
      },
      {
        "name": "version",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Filter the collection by ip version"
      },
      {
        "name": "nullRouted",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Filter Ips by Nulled-Status"
      },
      {
        "name": "ips",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Filter the collection of Ips for the comma separated list of Ips"
      },
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "default": 10,
          "type": "integer"
        },
        "description": "Limit the number of results returned"
      },
      {
        "name": "offset",
        "in": "query",
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "description": "Return results starting from the given offset"
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-04/schema",
              "id": "http://jsonschema.net",
              "properties": {
                "_metadata": {
                  "type": "object",
                  "description": "Metadata about the collection",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "description": "The maximum number of results returned",
                      "default": 20
                    },
                    "offset": {
                      "type": "integer",
                      "description": "Results are returned started at the given offset",
                      "default": 0
                    },
                    "totalCount": {
                      "type": "integer",
                      "description": "The total amount of results"
                    }
                  }
                },
                "ips": {
                  "type": "array",
                  "description": "An array of IP addresses",
                  "items": {
                    "type": "object",
                    "$schema": "http://json-schema.org/draft-04/schema",
                    "id": "http://jsonschema.net",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "IP address in CIDR notation"
                      },
                      "gateway": {
                        "type": "string",
                        "description": "Gateway"
                      },
                      "floatingIp": {
                        "type": "boolean",
                        "description": "Indicates if the IP is a Floating IP"
                      },
                      "version": {
                        "type": "string",
                        "description": "IP version"
                      },
                      "nullRouted": {
                        "type": "boolean",
                        "description": "IP address null routed"
                      },
                      "mainIp": {
                        "type": "boolean",
                        "description": "IP address is main"
                      },
                      "networkType": {
                        "type": "string",
                        "description": "Type of network",
                        "enum": [
                          "PUBLIC",
                          "REMOTE_MANAGEMENT"
                        ]
                      },
                      "reverseLookup": {
                        "type": "string",
                        "description": "The reverse lookup value",
                        "examples": [
                          "domain.example.com"
                        ]
                      },
                      "ddos": {
                        "type": "object",
                        "description": "DDoS IP Protection Details",
                        "properties": {
                          "detectionProfile": {
                            "type": "string",
                            "description": "The applied detection profile",
                            "enum": [
                              "STANDARD_DEFAULT",
                              "ADVANCED_DEFAULT",
                              "ADVANCED_LOW_UDP",
                              "ADVANCED_MED_UDP"
                            ]
                          },
                          "protectionType": {
                            "type": "string",
                            "description": "The type of DDoS protection",
                            "enum": [
                              "STANDARD",
                              "ADVANCED"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "example": {
                "value": {
                  "_metadata": {
                    "limit": 10,
                    "offset": 0,
                    "totalCount": 2
                  },
                  "ips": [
                    {
                      "ip": "12.123.123.1/24",
                      "gateway": "12.123.123.254",
                      "floatingIp": false,
                      "version": 4,
                      "nullRouted": true,
                      "reverseLookup": "domain.example.com",
                      "mainIp": true,
                      "networkType": "PUBLIC",
                      "ddos": {
                        "detectionProfile": "ADVANCED_LOW_UDP",
                        "protectionType": "ADVANCED"
                      }
                    },
                    {
                      "ip": "2001:db8:85a3::8a2e:370:7334/64",
                      "gateway": "2001:db8:85a3::8a2e:370:1",
                      "floatingIp": false,
                      "version": 6,
                      "nullRouted": false,
                      "reverseLookup": "domain.example.com",
                      "mainIp": false,
                      "networkType": "REMOTE_MANAGEMENT",
                      "ddos": {
                        "detectionProfile": "STANDARD_DEFAULT",
                        "protectionType": "STANDARD"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "404",
                  "errorMessage": "Resource not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "500",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "correlationId": "289346a1-3eaf-4da4-b707-62ef12eb08be",
                  "errorCode": "503",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "Dedicated racks"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/privateRacks.{privateRackId}.ips/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/privateRacks.{privateRackId}.ips/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/privateRacks.{privateRackId}.ips/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/privateRacks.{privateRackId}.ips/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/privateRacks.{privateRackId}.ips/getundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string"
      },
      "name": "privateRackId",
      "in": "path",
      "required": true,
      "description": "Id of the dedicated rack",
      "example": "2314213"
    }
  ]
}
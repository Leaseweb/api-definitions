{
  "get": {
    "operationId": "get/ips/{ip}/reverseLookup",
    "summary": "List reverse lookup records for an IPv6 range",
    "description": "Get reverse lookup values set for IPs in the specified range",
    "parameters": [
      {
        "name": "ip",
        "in": "query",
        "description": "Filter the list by IP address",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "reverseLookup",
        "in": "query",
        "description": "Filter the list by reverse lookup",
        "schema": {
          "type": "string"
        }
      },
      {
        "name": "limit",
        "in": "query",
        "schema": {
          "default": 50,
          "type": "integer"
        },
        "description": "Maximum number of results"
      },
      {
        "name": "offset",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "description": "Offset of the first result"
      }
    ],
    "responses": {
      "200": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "reverseLookups": [
                    {
                      "ip": "2001:db8::0",
                      "reverseLookup": "name1.example.com"
                    },
                    {
                      "ip": "2001:db8::1",
                      "reverseLookup": "name2.example.com"
                    }
                  ],
                  "_metadata": {
                    "totalCount": 3,
                    "offset": 0,
                    "limit": 2
                  }
                }
              }
            },
            "schema": {
              "title": "Reverse Lookup list",
              "description": "Object containing a list of reverse lookup values set for ips in a specific range",
              "type": "object",
              "properties": {
                "reverseLookups": {
                  "type": "array",
                  "items": {
                    "description": "Reverse lookup set for a specific IP address",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "IP address"
                      },
                      "reverseLookup": {
                        "type": "string",
                        "description": "Reverse lookup value"
                      }
                    },
                    "title": "Reverse Lookup",
                    "type": "object"
                  }
                },
                "_metadata": {
                  "properties": {
                    "totalCount": {
                      "type": "number"
                    },
                    "offset": {
                      "type": "number"
                    },
                    "limit": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "401": {
        "content": {},
        "description": "Authentication is required."
      },
      "403": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      },
      "500": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      },
      "503": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      }
    },
    "tags": [
      "IPs"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/ips.{ip}.reverseLookup/getundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/ips.{ip}.reverseLookup/getundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/ips.{ip}.reverseLookup/getundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/ips.{ip}.reverseLookup/getundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/ips.{ip}.reverseLookup/getundefined"
        }
      }
    ]
  },
  "put": {
    "operationId": "put/ips/{ip}/reverseLookup",
    "summary": "Set or remove reverse lookup records for an IPv6 range",
    "description": "This endpoint allows to set or unset reverse lookup for multiple IPv6 IPs in a specific IP range. To remove reverse lookup for an IP address set it to `null` or `\"\"`.\nReverse lookup values of IPs not listed in the request body will not be affected.\nYou can set up to 20 records in a single request.\n",
    "requestBody": {
      "content": {
        "application/json": {
          "examples": {
            "example": {
              "value": {
                "reverseLookups": [
                  {
                    "ip": "2001:db8::0",
                    "reverseLookup": "name1.example.com"
                  },
                  {
                    "ip": "2001:db8::1",
                    "reverseLookup": "name2.example.com"
                  }
                ]
              }
            }
          },
          "schema": {
            "type": "object",
            "properties": {
              "reverseLookups": {
                "type": "array",
                "items": {
                  "description": "Reverse lookup set for a specific IP address",
                  "properties": {
                    "ip": {
                      "type": "string",
                      "description": "IP address"
                    },
                    "reverseLookup": {
                      "type": "string",
                      "description": "Reverse lookup value"
                    }
                  },
                  "title": "Reverse Lookup",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "The request has been processed.",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "reverseLookups": [
                    {
                      "ip": "2001:db8::0",
                      "reverseLookup": "name1.example.com"
                    },
                    {
                      "ip": "2001:db8::1",
                      "reverseLookup": "name2.example.com"
                    }
                  ]
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "reverseLookups": {
                  "type": "array",
                  "items": {
                    "description": "Reverse lookup set for a specific IP address",
                    "properties": {
                      "ip": {
                        "type": "string",
                        "description": "IP address"
                      },
                      "reverseLookup": {
                        "type": "string",
                        "description": "Reverse lookup value"
                      }
                    },
                    "title": "Reverse Lookup",
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "BadRequest",
                  "errorMessage": "Synchronous update maximum batch size exceeded."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "401": {
        "content": {},
        "description": "Authentication is required."
      },
      "403": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      },
      "500": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      },
      "503": {
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            },
            "schema": {
              "properties": {
                "errorCode": {
                  "type": "string"
                },
                "errorMessage": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": ""
      }
    },
    "tags": [
      "IPs"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/ips.{ip}.reverseLookup/putundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/ips.{ip}.reverseLookup/putundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/ips.{ip}.reverseLookup/putundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/ips.{ip}.reverseLookup/putundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/ips.{ip}.reverseLookup/putundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string"
      },
      "name": "ip",
      "in": "path",
      "required": true,
      "description": "IP address or IP address with prefixLength {ip}_{prefix}. If prefixLength is not given, then we assume 32 (for IPv4) or 128 (for IPv6). PrefixLength is mandatory for IP range, for example, the IPv6 address range with prefixLength = 112"
    }
  ]
}
{
  "post": {
    "operationId": "post/ips/{ip}/nullRoute",
    "summary": "Null route an IP",
    "description": "",
    "requestBody": {
      "content": {
        "application/json": {
          "examples": {
            "example": {
              "value": {
                "automatedUnnullingAt": "2015-06-25T11:13:00Z",
                "ticketId": "188612",
                "comment": "This IP is evil"
              }
            }
          },
          "schema": {
            "type": "object",
            "properties": {
              "automatedUnnullingAt": {
                "type": "string",
                "description": "The date and time when the null route is to be deactivated. The date and time should be specified using the format yyyy-mm-ddThh:mm:ssÂ±hh:mm (with time zone designator) or yyyy-mm-ddThh:mm:ssZ (UTC). If this field is not present then the null route will not be automatically removed.",
                "format": "date-time",
                "example": "2015-06-25T11:13:00Z"
              },
              "comment": {
                "type": "string",
                "description": "A comment to be stored with the null route (e.g. null route reason)",
                "example": "This IP is evil"
              },
              "ticketId": {
                "type": "string",
                "description": "A reference to be stored with the null route",
                "example": "188612"
              }
            }
          }
        }
      },
      "description": ""
    },
    "responses": {
      "201": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "id": "4534536",
                  "ip": "192.0.2.1",
                  "nulledAt": "2015-06-28T12:00:00Z",
                  "nulledBy": "john.doe@example.com",
                  "nullLevel": 1,
                  "automatedUnnullingAt": "2015-06-25T11:13:00Z",
                  "unnulledAt": null,
                  "unnulledBy": null,
                  "ticketId": "188612",
                  "comment": "This IP is evil",
                  "equipmentId": "456",
                  "assignedContract": {
                    "id": "123456"
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "IPs"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/ips.{ip}.nullRoute/postundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/ips.{ip}.nullRoute/postundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/ips.{ip}.nullRoute/postundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/ips.{ip}.nullRoute/postundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/ips.{ip}.nullRoute/postundefined"
        }
      }
    ]
  },
  "delete": {
    "operationId": "delete/ips/{ip}/nullRoute",
    "summary": "Remove a null route",
    "description": "",
    "responses": {
      "200": {
        "description": "Null-route successfully deleted",
        "content": {}
      },
      "401": {
        "description": "Authentication is required.",
        "content": {}
      },
      "403": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "ACCESS_DENIED",
                  "errorMessage": "The access token is expired or invalid."
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "SERVER_ERROR",
                  "errorMessage": "The server encountered an unexpected condition that prevented it from fulfilling the request."
                }
              }
            }
          }
        }
      },
      "503": {
        "description": "",
        "content": {
          "application/json": {
            "examples": {
              "example": {
                "value": {
                  "errorCode": "TEMPORARILY_UNAVAILABLE",
                  "errorMessage": "The server is currently unable to handle the request due to a temporary overloading or maintenance of the server."
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      "IPs"
    ],
    "x-codeSamples": [
      {
        "lang": "Shell + Curl",
        "source": {
          "$ref": "../code_samples/Shell+Curl/ips.{ip}.nullRoute/deleteundefined"
        }
      },
      {
        "lang": "Python + Python3",
        "source": {
          "$ref": "../code_samples/Python+Python3/ips.{ip}.nullRoute/deleteundefined"
        }
      },
      {
        "lang": "Php + Http2",
        "source": {
          "$ref": "../code_samples/Php+Http2/ips.{ip}.nullRoute/deleteundefined"
        }
      },
      {
        "lang": "Ruby + Native",
        "source": {
          "$ref": "../code_samples/Ruby+Native/ips.{ip}.nullRoute/deleteundefined"
        }
      },
      {
        "lang": "Node + Native",
        "source": {
          "$ref": "../code_samples/Node+Native/ips.{ip}.nullRoute/deleteundefined"
        }
      }
    ]
  },
  "parameters": [
    {
      "schema": {
        "type": "string"
      },
      "name": "ip",
      "in": "path",
      "required": true,
      "description": "IP address or IP address with prefixLength {ip}_{prefix}. If prefixLength is not given, then we assume 32 (for IPv4) or 128 (for IPv6). PrefixLength is mandatory for IP range, for example, the IPv6 address range with prefixLength = 112",
      "example": "192.0.2.1"
    }
  ]
}